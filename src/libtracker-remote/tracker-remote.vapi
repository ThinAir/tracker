/* tracker-remote.vapi generated by valac 0.36.3, do not modify. */

[CCode (cprefix = "Tracker", gir_namespace = "Tracker", gir_version = "1.0", lower_case_cprefix = "tracker_")]
namespace Tracker {
	namespace Remote {
		[CCode (cheader_filename = "libtracker-remote/tracker-remote.h")]
		public class Connection : Tracker.Sparql.Connection {
			public Connection (string base_uri);
			public override Tracker.Sparql.Cursor query (string sparql, GLib.Cancellable? cancellable) throws GLib.Error, Tracker.Sparql.Error, GLib.IOError;
			public override async Tracker.Sparql.Cursor query_async (string sparql, GLib.Cancellable? cancellable) throws GLib.Error, Tracker.Sparql.Error, GLib.IOError;
		}
		[CCode (cheader_filename = "libtracker-remote/tracker-remote.h")]
		public class JsonCursor : Tracker.Sparql.Cursor {
			public JsonCursor (string document, long length) throws GLib.Error;
			public override void close ();
			public override unowned string? get_string (int column, out long length = null);
			public override Tracker.Sparql.ValueType get_value_type (int column);
			public override unowned string? get_variable_name (int column);
			public override bool next (GLib.Cancellable? cancellable = null) throws GLib.IOError, GLib.Error;
			public override async bool next_async (GLib.Cancellable? cancellable = null) throws GLib.IOError, GLib.Error;
			public override void rewind ();
			public override int n_columns { get; }
		}
		[CCode (cheader_filename = "libtracker-remote/tracker-remote.h")]
		public class XmlCursor : Tracker.Sparql.Cursor {
			public XmlCursor (string document, long length) throws Tracker.Sparql.Error;
			public override void close ();
			public override unowned string? get_string (int column, out long length = null);
			public override Tracker.Sparql.ValueType get_value_type (int column);
			public override unowned string? get_variable_name (int column);
			public override bool next (GLib.Cancellable? cancellable = null) throws GLib.IOError, GLib.Error;
			public override async bool next_async (GLib.Cancellable? cancellable = null) throws GLib.IOError, GLib.Error;
			public override void rewind ();
			public override int n_columns { get; }
		}
	}
}
